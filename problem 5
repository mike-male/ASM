startup
	jsr main
	halt
 			; #include <iostream>
 			; using namespace std;
 			; class C1
 			; {
 			; public:
			 ; void f();
		 ;
 			; 
 			; int x;
 			; int y;
 			; };
 			; class C2
 			; {
 			; public:
			 ; void f();
 			; };
 @A@f1$v 		; void C1::f()
 push lr 		; {
 push fp
 mov fp, sp

 ldr r0, fp, 2 	; cout << x << endl;
 ldr r0, r0, 0
 dout
 nl

 ldr r0, fp, 2 	; cout << y << endl;
 ldr r0, r0, 1
 dout
 nl

 mov sp, fp		 ; }
 pop fp
 pop lr
 ret


 @A@f2$v	 	; void C2::f()
 push lr 		; {
 push fp
 mov fp, sp

   lea r0, @helloworld	;printf
   puts
   nl
 mov sp, fp		 ; }
 pop fp
 pop lr
 ret

 ;==============================================================
 main push lr		 ; int main()
 push fp 		; {
 mov fp, sp

 add sp, sp, -2 	; create C1 and C2
 add sp, sp, -2

 mov r0, 5 		; a.x(5);
 push r0
 mov r0, 6		; a.y(6);
 push r0


 add r0, fp, -1 	; a.display();
 push r0
 jsr @A@display$v
 add sp, sp, 1


 add r0, fp, -3 		; a.f();
 push r0
 jsr @A@f1$v
 add sp, sp, 1

 add r0, fp, -3 		; b.f();
 push r0
 jsr @A@f2$v
 add sp, sp, 1

 mov r0, 0 			; return 0;
 mov sp, fp
 pop fp
 pop lr
 ret
 ; }
